{"ast":null,"code":"var _jsxFileName = \"/home/marko/Desktop/RickAndMortyFWW/src/Components/EditModal/index.tsx\";\nimport React from \"react\";\nimport \"./edit-modal.scss\";\nimport { Button, Form, Input } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditModal = ({\n  handleClose,\n  clickedChar,\n  updateFavorites\n}) => {\n  const handleOverlayClick = event => {\n    if (event.target === event.currentTarget) {\n      handleClose();\n    }\n  };\n  console.log(favorites);\n  console.log(clickedChar);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-modal\",\n    onClick: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      style: {\n        maxWidth: 600\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-modal\",\n        onClick: handleClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: \"Edit character name\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Species\",\n        name: \"species\",\n        rules: [{\n          required: true,\n          message: \"Edit character specie\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = EditModal;\nexport default EditModal;\n\n// import React, { useContext, useState } from \"react\";\n// import Header from \"../../Components/Header\";\n// import Footer from \"../../Components/Footer\";\n// import EditModal from \"../../Components/EditModal\";\n// import { Button } from \"antd\";\n// import can from \"../../Assets/garbage-can.svg\";\n// import { UserContext } from \"../../Context/UserContext\";\n// import \"./favorites-page.scss\";\n\n// type FieldType = {\n//   name?: string;\n//   species?: string;\n// };\n\n// const FavoritesPage = () => {\n//   const [modal, setModal] = useState(false);\n//   const [clickedChar, setClickedChar] = useState<FieldType | null>(null);\n//   const handleOpen = (char: FieldType) => {\n//     setClickedChar(char);\n//     setModal(true);\n//   };\n//   const handleClose = () => {\n//     setModal(false);\n//   };\n//   const userContext = useContext(UserContext);\n//   const favorites = userContext?.favorites;\n\n//   const updateFavorites = (updatedChar: FieldType) => {\n//     const updatedFavorites = favorites.map((char) =>\n//       char === clickedChar ? { ...char, ...updatedChar } : char\n//     );\n//     userContext?.setFavorites(updatedFavorites);\n//     localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n//   };\n\n//   const handleRemoveFavorite = (index: number) => {\n//     const updatedFavorites = favorites.filter((_, i) => i !== index);\n//     userContext?.setFavorites(updatedFavorites);\n//     localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n//   };\n\n//   return (\n//     <>\n//       <Header content=\"Logout\" home=\"Home\" />\n//       <div className=\"div-favorites-page\">\n//         <h1>Your Favorites</h1>\n\n//         {favorites?.map((char, i) => (\n//           <section key={i}>\n//             <h3>{char.name}</h3>\n//             <p>{char.species}</p>\n//             <img src={char.image} alt=\"\" className=\"image\" />\n//             <div className=\"middle\">\n//               <img\n//                 src={can}\n//                 alt=\"\"\n//                 className=\"can\"\n//                 onClick={() => handleRemoveFavorite(i)}\n//               />\n//             </div>\n//             <Button type=\"primary\" onClick={() => handleOpen(char)}>\n//               Edit\n//             </Button>\n//           </section>\n//         ))}\n//         {modal && (\n//           <EditModal\n//             handleClose={handleClose}\n//             clickedChar={clickedChar}\n//             updateFavorites={updateFavorites}\n//           />\n//         )}\n//       </div>\n//       <Footer />\n//     </>\n//   );\n// };\n\n// export default FavoritesPage;\nvar _c;\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"names":["React","Button","Form","Input","jsxDEV","_jsxDEV","EditModal","handleClose","clickedChar","updateFavorites","handleOverlayClick","event","target","currentTarget","console","log","favorites","className","onClick","children","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","onFinish","onFinishFailed","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","Item","label","rules","required","message","offset","type","htmlType","_c","$RefreshReg$"],"sources":["/home/marko/Desktop/RickAndMortyFWW/src/Components/EditModal/index.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./edit-modal.scss\";\nimport { Button, Form, Input } from \"antd\";\n\ntype FieldType = {\n  name?: string;\n  species?: string;\n};\ninterface EditModalProps {\n  handleClose: () => void;\n  clickedChar: FieldType | null;\n  updateFavorites: (updatedChar: FieldType) => void;\n}\n\nconst EditModal: React.FC<EditModalProps> = ({\n  handleClose,\n  clickedChar,\n  updateFavorites,\n}) => {\n  const handleOverlayClick = (event: { target: any; currentTarget: any }) => {\n    if (event.target === event.currentTarget) {\n      handleClose();\n    }\n  };\n  console.log(favorites);\n  console.log(clickedChar);\n  return (\n    <div className=\"edit-modal\" onClick={handleOverlayClick}>\n      <Form\n        name=\"basic\"\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        style={{ maxWidth: 600 }}\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"off\"\n      >\n        <span className=\"close-modal\" onClick={handleClose}>\n          X\n        </span>\n        <Form.Item<FieldType>\n          label=\"Name\"\n          name=\"name\"\n          rules={[{ required: true, message: \"Edit character name\" }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item<FieldType>\n          label=\"Species\"\n          name=\"species\"\n          rules={[{ required: true, message: \"Edit character specie\" }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default EditModal;\n\n// import React, { useContext, useState } from \"react\";\n// import Header from \"../../Components/Header\";\n// import Footer from \"../../Components/Footer\";\n// import EditModal from \"../../Components/EditModal\";\n// import { Button } from \"antd\";\n// import can from \"../../Assets/garbage-can.svg\";\n// import { UserContext } from \"../../Context/UserContext\";\n// import \"./favorites-page.scss\";\n\n// type FieldType = {\n//   name?: string;\n//   species?: string;\n// };\n\n// const FavoritesPage = () => {\n//   const [modal, setModal] = useState(false);\n//   const [clickedChar, setClickedChar] = useState<FieldType | null>(null);\n//   const handleOpen = (char: FieldType) => {\n//     setClickedChar(char);\n//     setModal(true);\n//   };\n//   const handleClose = () => {\n//     setModal(false);\n//   };\n//   const userContext = useContext(UserContext);\n//   const favorites = userContext?.favorites;\n\n//   const updateFavorites = (updatedChar: FieldType) => {\n//     const updatedFavorites = favorites.map((char) =>\n//       char === clickedChar ? { ...char, ...updatedChar } : char\n//     );\n//     userContext?.setFavorites(updatedFavorites);\n//     localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n//   };\n\n//   const handleRemoveFavorite = (index: number) => {\n//     const updatedFavorites = favorites.filter((_, i) => i !== index);\n//     userContext?.setFavorites(updatedFavorites);\n//     localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n//   };\n\n//   return (\n//     <>\n//       <Header content=\"Logout\" home=\"Home\" />\n//       <div className=\"div-favorites-page\">\n//         <h1>Your Favorites</h1>\n\n//         {favorites?.map((char, i) => (\n//           <section key={i}>\n//             <h3>{char.name}</h3>\n//             <p>{char.species}</p>\n//             <img src={char.image} alt=\"\" className=\"image\" />\n//             <div className=\"middle\">\n//               <img\n//                 src={can}\n//                 alt=\"\"\n//                 className=\"can\"\n//                 onClick={() => handleRemoveFavorite(i)}\n//               />\n//             </div>\n//             <Button type=\"primary\" onClick={() => handleOpen(char)}>\n//               Edit\n//             </Button>\n//           </section>\n//         ))}\n//         {modal && (\n//           <EditModal\n//             handleClose={handleClose}\n//             clickedChar={clickedChar}\n//             updateFavorites={updateFavorites}\n//           />\n//         )}\n//       </div>\n//       <Footer />\n//     </>\n//   );\n// };\n\n// export default FavoritesPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}