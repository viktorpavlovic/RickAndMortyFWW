{"ast":null,"code":"var _jsxFileName = \"/home/marko/Desktop/RickAndMortyFWW/src/Components/AllCharacters/index.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Context/UserContext\";\nimport Loader from \"../Loader\";\nimport \"./all-char.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllCharacters = ({\n  handleOpen\n}) => {\n  _s();\n  var _userContext$data, _userContext$searchVa, _filtered;\n  const userContext = useContext(UserContext);\n  const characterData = userContext === null || userContext === void 0 ? void 0 : (_userContext$data = userContext.data) === null || _userContext$data === void 0 ? void 0 : _userContext$data.results;\n  const inputValue = userContext === null || userContext === void 0 ? void 0 : (_userContext$searchVa = userContext.searchValue) === null || _userContext$searchVa === void 0 ? void 0 : _userContext$searchVa.data;\n  const searchType = userContext === null || userContext === void 0 ? void 0 : userContext.searchType;\n  let filtered = characterData; // Initialize with all characters\n\n  if (inputValue && searchType === \"name\") {\n    filtered = characterData === null || characterData === void 0 ? void 0 : characterData.filter(char => char === null || char === void 0 ? void 0 : char.name.toLowerCase().includes(inputValue));\n  } else if (inputValue && searchType === \"species\") {\n    filtered = characterData === null || characterData === void 0 ? void 0 : characterData.filter(char => char === null || char === void 0 ? void 0 : char.species.toLowerCase().includes(inputValue));\n  }\n  if (!(userContext !== null && userContext !== void 0 && userContext.data)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"div-all-characters\",\n    children: (_filtered = filtered) === null || _filtered === void 0 ? void 0 : _filtered.map((char, i) => /*#__PURE__*/_jsxDEV(\"section\", {\n      onClick: () => handleOpen(char),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: char.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: char.image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCharacters, \"j5sV9rHnklY0KPGfLa+JuIW0EIQ=\");\n_c = AllCharacters;\nvar _c;\n$RefreshReg$(_c, \"AllCharacters\");","map":{"version":3,"names":["React","useContext","UserContext","Loader","jsxDEV","_jsxDEV","AllCharacters","handleOpen","_s","_userContext$data","_userContext$searchVa","_filtered","userContext","characterData","data","results","inputValue","searchValue","searchType","filtered","filter","char","name","toLowerCase","includes","species","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","i","onClick","src","image","alt","_c","$RefreshReg$"],"sources":["/home/marko/Desktop/RickAndMortyFWW/src/Components/AllCharacters/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../Context/UserContext\";\nimport Loader from \"../Loader\";\nimport \"./all-char.scss\";\ninterface AllCharactersProps {\n  handleOpen: (char: any) => void;\n}\n\nconst AllCharacters: React.FC<AllCharactersProps> = ({ handleOpen }) => {\n  const userContext = useContext(UserContext);\n  const characterData = userContext?.data?.results;\n  const inputValue = userContext?.searchValue?.data;\n  const searchType = userContext?.searchType;\n\n  let filtered = characterData; // Initialize with all characters\n\n  if (inputValue && searchType === \"name\") {\n    filtered = characterData?.filter((char) =>\n      char?.name.toLowerCase().includes(inputValue)\n    );\n  } else if (inputValue && searchType === \"species\") {\n    filtered = characterData?.filter((char) =>\n      char?.species.toLowerCase().includes(inputValue)\n    );\n  }\n\n  if (!userContext?.data) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"div-all-characters\">\n      {filtered?.map((char, i) => (\n        <section onClick={() => handleOpen(char)} key={i}>\n          <h3>{char.name}</h3>\n          <img src={char.image} alt=\"\" />\n        </section>\n      ))}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKzB,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,qBAAA,EAAAC,SAAA;EACtE,MAAMC,WAAW,GAAGX,UAAU,CAACC,WAAW,CAAC;EAC3C,MAAMW,aAAa,GAAGD,WAAW,aAAXA,WAAW,wBAAAH,iBAAA,GAAXG,WAAW,CAAEE,IAAI,cAAAL,iBAAA,uBAAjBA,iBAAA,CAAmBM,OAAO;EAChD,MAAMC,UAAU,GAAGJ,WAAW,aAAXA,WAAW,wBAAAF,qBAAA,GAAXE,WAAW,CAAEK,WAAW,cAAAP,qBAAA,uBAAxBA,qBAAA,CAA0BI,IAAI;EACjD,MAAMI,UAAU,GAAGN,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEM,UAAU;EAE1C,IAAIC,QAAQ,GAAGN,aAAa,CAAC,CAAC;;EAE9B,IAAIG,UAAU,IAAIE,UAAU,KAAK,MAAM,EAAE;IACvCC,QAAQ,GAAGN,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEO,MAAM,CAAEC,IAAI,IACpCA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,UAAU,CAC9C,CAAC;EACH,CAAC,MAAM,IAAIA,UAAU,IAAIE,UAAU,KAAK,SAAS,EAAE;IACjDC,QAAQ,GAAGN,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEO,MAAM,CAAEC,IAAI,IACpCA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,OAAO,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,UAAU,CACjD,CAAC;EACH;EAEA,IAAI,EAACJ,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEE,IAAI,GAAE;IACtB,oBACET,OAAA;MAAAqB,QAAA,eACErB,OAAA,CAACF,MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEV;EAEA,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,oBAAoB;IAAAL,QAAA,GAAAf,SAAA,GAChCQ,QAAQ,cAAAR,SAAA,uBAARA,SAAA,CAAUqB,GAAG,CAAC,CAACX,IAAI,EAAEY,CAAC,kBACrB5B,OAAA;MAAS6B,OAAO,EAAEA,CAAA,KAAM3B,UAAU,CAACc,IAAI,CAAE;MAAAK,QAAA,gBACvCrB,OAAA;QAAAqB,QAAA,EAAKL,IAAI,CAACC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBzB,OAAA;QAAK8B,GAAG,EAAEd,IAAI,CAACe,KAAM;QAACC,GAAG,EAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAFcG,CAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGvC,CACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtB,EAAA,CApCIF,aAA2C;AAAAgC,EAAA,GAA3ChC,aAA2C;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}