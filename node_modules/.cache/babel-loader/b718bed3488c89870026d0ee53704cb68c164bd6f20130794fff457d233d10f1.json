{"ast":null,"code":"var _jsxFileName = \"/home/marko/Desktop/RickAndMortyFWW/src/Components/Loader/index.tsx\";\nimport React from \"react\";\nimport { Alert, Spin } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Loader = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Alert, {\n    message: \"Alert message title\",\n    description: \"Further details about the context of this alert.\",\n    type: \"info\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n_c = Loader;\nexport default Loader;\nvar _c;\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"names":["React","Alert","Spin","jsxDEV","_jsxDEV","Fragment","_Fragment","Loader","children","message","description","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marko/Desktop/RickAndMortyFWW/src/Components/Loader/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Alert, Space, Spin } from \"antd\";\n\nconst Loader: React.FC = () => (\n  <>\n    <Alert\n      message=\"Alert message title\"\n      description=\"Further details about the context of this alert.\"\n      type=\"info\"\n    />\n    <Spin></Spin>\n  </>\n);\n\nexport default Loader;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAASC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,MAAgB,GAAGA,CAAA,kBACvBH,OAAA,CAAAE,SAAA;EAAAE,QAAA,gBACEJ,OAAA,CAACH,KAAK;IACJQ,OAAO,EAAC,qBAAqB;IAC7BC,WAAW,EAAC,kDAAkD;IAC9DC,IAAI,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC,eACFX,OAAA,CAACF,IAAI;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAAA,eACb,CACH;AAACC,EAAA,GATIT,MAAgB;AAWtB,eAAeA,MAAM;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}