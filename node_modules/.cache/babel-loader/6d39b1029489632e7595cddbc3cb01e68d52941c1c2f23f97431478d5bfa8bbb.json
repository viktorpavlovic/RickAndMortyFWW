{"ast":null,"code":"var _jsxFileName = \"/home/marko/Desktop/RickAndMortyFWW/src/Components/EditModal/index.tsx\";\nimport React from \"react\";\nimport \"./edit-modal.scss\";\nimport { Button, Form } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditModal = ({\n  handleClose,\n  favorites,\n  clickedChar,\n  onUpdateCharacter\n}) => {\n  const handleOverlayClick = event => {\n    if (event.target === event.currentTarget) {\n      handleClose();\n    }\n  };\n  const onFinish = values => {\n    if (clickedChar) {\n      const updatedCharacter = {\n        ...clickedChar,\n        ...values\n      };\n      onUpdateCharacter(updatedCharacter);\n      handleClose();\n    }\n  };\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-modal\",\n    onClick: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      style: {\n        maxWidth: 600\n      },\n      initialValues: {\n        ...clickedChar\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = EditModal;\nexport default EditModal;\nvar _c;\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"names":["React","Button","Form","jsxDEV","_jsxDEV","EditModal","handleClose","favorites","clickedChar","onUpdateCharacter","handleOverlayClick","event","target","currentTarget","onFinish","values","updatedCharacter","onFinishFailed","errorInfo","console","log","className","onClick","children","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","autoComplete","Item","offset","type","htmlType","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marko/Desktop/RickAndMortyFWW/src/Components/EditModal/index.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./edit-modal.scss\";\nimport { Button, Form, Input } from \"antd\";\n\ntype FieldType = {\n  name?: string;\n  species?: string;\n};\ninterface EditModalProps {\n  handleClose: () => void;\n  favorites: FieldType[];\n  clickedChar: FieldType | null;\n  onUpdateCharacter: (updatedCharacter: FieldType) => void;\n}\n\nconst EditModal: React.FC<EditModalProps> = ({\n  handleClose,\n  favorites,\n  clickedChar,\n  onUpdateCharacter,\n}) => {\n  const handleOverlayClick = (event: { target: any; currentTarget: any }) => {\n    if (event.target === event.currentTarget) {\n      handleClose();\n    }\n  };\n\n  const onFinish = (values: FieldType) => {\n    if (clickedChar) {\n      const updatedCharacter = { ...clickedChar, ...values };\n      onUpdateCharacter(updatedCharacter);\n      handleClose();\n    }\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <div className=\"edit-modal\" onClick={handleOverlayClick}>\n      <Form\n        name=\"basic\"\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        style={{ maxWidth: 600 }}\n        initialValues={{ ...clickedChar }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"off\"\n      >\n        {/* ... form items ... */}\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default EditModal;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAC1B,SAASC,MAAM,EAAEC,IAAI,QAAe,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAa3C,MAAMC,SAAmC,GAAGA,CAAC;EAC3CC,WAAW;EACXC,SAAS;EACTC,WAAW;EACXC;AACF,CAAC,KAAK;EACJ,MAAMC,kBAAkB,GAAIC,KAA0C,IAAK;IACzE,IAAIA,KAAK,CAACC,MAAM,KAAKD,KAAK,CAACE,aAAa,EAAE;MACxCP,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMQ,QAAQ,GAAIC,MAAiB,IAAK;IACtC,IAAIP,WAAW,EAAE;MACf,MAAMQ,gBAAgB,GAAG;QAAE,GAAGR,WAAW;QAAE,GAAGO;MAAO,CAAC;MACtDN,iBAAiB,CAACO,gBAAgB,CAAC;MACnCV,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMW,cAAc,GAAIC,SAAc,IAAK;IACzCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,SAAS,CAAC;EACnC,CAAC;EAED,oBACEd,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAACC,OAAO,EAAEZ,kBAAmB;IAAAa,QAAA,eACtDnB,OAAA,CAACF,IAAI;MACHsB,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAE;QAAEC,IAAI,EAAE;MAAE,CAAE;MACtBC,UAAU,EAAE;QAAED,IAAI,EAAE;MAAG,CAAE;MACzBE,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MACzBC,aAAa,EAAE;QAAE,GAAGtB;MAAY,CAAE;MAClCM,QAAQ,EAAEA,QAAS;MACnBG,cAAc,EAAEA,cAAe;MAC/Bc,YAAY,EAAC,KAAK;MAAAR,QAAA,eAIlBnB,OAAA,CAACF,IAAI,CAAC8B,IAAI;QAACL,UAAU,EAAE;UAAEM,MAAM,EAAE,CAAC;UAAEP,IAAI,EAAE;QAAG,CAAE;QAAAH,QAAA,eAC7CnB,OAAA,CAACH,MAAM;UAACiC,IAAI,EAAC,SAAS;UAACC,QAAQ,EAAC,QAAQ;UAAAZ,QAAA,EAAC;QAEzC;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACC,EAAA,GA9CInC,SAAmC;AAgDzC,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}