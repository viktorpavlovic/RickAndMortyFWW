{"ast":null,"code":"var _jsxFileName = \"/home/marko/Desktop/RickAndMortyFWW/src/Components/CharModal/index.tsx\";\nimport React from \"react\";\n\n// Assuming you have a Character type defined\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharModal = ({\n  clickedChar\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char-modal\",\n    children: [(clickedChar === null || clickedChar === void 0 ? void 0 : clickedChar.name) || \"No character selected\", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = CharModal;\nexport default CharModal;\nvar _c;\n$RefreshReg$(_c, \"CharModal\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CharModal","clickedChar","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marko/Desktop/RickAndMortyFWW/src/Components/CharModal/index.tsx"],"sourcesContent":["import React from \"react\";\n\n// Assuming you have a Character type defined\ninterface Character {\n  name: string;\n  // other properties...\n}\n\ninterface CharModalProps {\n  clickedChar: Character | null; // Specify the type of clickedChar\n}\n\nconst CharModal: React.FC<CharModalProps> = ({ clickedChar }) => {\n  return (\n    <div className=\"char-modal\">\n      {clickedChar?.name || \"No character selected\"}{\" \"}\n      {/* Use optional chaining */}\n    </div>\n  );\n};\n\nexport default CharModal;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAUA,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAC/D,oBACEF,OAAA;IAAKG,SAAS,EAAC,YAAY;IAAAC,QAAA,GACxB,CAAAF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,IAAI,KAAI,uBAAuB,EAAE,GAAG;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/C,CAAC;AAEV,CAAC;AAACC,EAAA,GAPIT,SAAmC;AASzC,eAAeA,SAAS;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}