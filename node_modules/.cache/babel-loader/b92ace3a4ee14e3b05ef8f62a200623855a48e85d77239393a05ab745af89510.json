{"ast":null,"code":"var _jsxFileName = \"/home/marko/Desktop/RickAndMortyFWW/src/Context/UserContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(null);\nexport const UserContextProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [data, setData] = useState(null);\n  const [favorites, setFavorites] = useState(() => {\n    const storedFavorites = localStorage.getItem(\"favorites\");\n    return storedFavorites ? JSON.parse(storedFavorites) : [];\n  });\n  const [currentPageUrl, setCurrentPageUrl] = useState(() => {\n    const storedPage = localStorage.getItem(\"currentPage\");\n    return storedPage ? `https://rickandmortyapi.com/api/character?page=${storedPage}` : \"https://rickandmortyapi.com/api/character\";\n  });\n  const [nextPageUrl, setNextPageUrl] = useState(null);\n  const [prevPageUrl, setPrevPageUrl] = useState(null);\n  const [pages, setPages] = useState(null);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    const storedPassword = localStorage.getItem(\"password\");\n    if (storedUsername && storedPassword) {\n      setUser({\n        name: storedUsername,\n        password: storedPassword\n      });\n    }\n  }, []);\n  const navigate = useNavigate();\n  const navigateToHome = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"password\");\n    setUser(null);\n    navigate(\"/\");\n  };\n  const navigateToFavorites = () => {\n    navigate(\"/favorites\");\n  };\n  const navigateToChar = () => {\n    navigate(\"/home\");\n  };\n  const nextPage = () => {\n    if (nextPageUrl && nextPageUrl !== undefined) {\n      setCurrentPageUrl(nextPageUrl.toString());\n    }\n  };\n  const prevPage = () => {\n    if (prevPageUrl && prevPageUrl !== undefined) {\n      setCurrentPageUrl(prevPageUrl.toString());\n    }\n  };\n  const goToPage = num => {\n    setCurrentPageUrl(`https://rickandmortyapi.com/api/character?page=${num}`);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      data,\n      setData,\n      navigateToHome,\n      navigateToFavorites,\n      navigateToChar,\n      favorites,\n      setFavorites,\n      setNextPageUrl,\n      setPrevPageUrl,\n      setPages,\n      setCurrentPageUrl,\n      nextPageUrl,\n      prevPageUrl,\n      pages,\n      currentPageUrl,\n      nextPage,\n      prevPage,\n      goToPage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n// interface ICharacter<T> {\n//   name: string;\n//   sexInfo: T;\n// }\n\n// interface MaleReproductiveInfo {\n//   dSize: string;\n\n// }\n\n// const aleksa : ICharacter<MaleReproductiveInfo>\n\n// aleksa.sexInfo.\n_s(UserContextProvider, \"lfwMHc4A99Ms2SBjirRMBOGRJ/8=\", false, function () {\n  return [useNavigate];\n});\n_c = UserContextProvider;\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","UserContext","UserContextProvider","children","_s","user","setUser","data","setData","favorites","setFavorites","storedFavorites","localStorage","getItem","JSON","parse","currentPageUrl","setCurrentPageUrl","storedPage","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","pages","setPages","storedUsername","storedPassword","name","password","navigate","navigateToHome","removeItem","navigateToFavorites","navigateToChar","nextPage","undefined","toString","prevPage","goToPage","num","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marko/Desktop/RickAndMortyFWW/src/Context/UserContext.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useState,\n  useEffect,\n  \n} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport type AuthUser = {\n  name: string;\n  password: string;\n};\nexport type ApiData = {\n  results: Character[];\n};\n\nexport interface Character {\n  id: number;\n  name: string;\n  image: string;\n  species: string;\n  status: string;\n  gender: string;\n}\ninterface FavoriteCharacter {\n  name: string;\n  image: string;\n  species: string;\n}\nexport type PagesInfo = {\n  url(url: any): unknown;\n  page: number;\n};\n\nexport type CurrentPageUrl = {\n  url: string;\n};\n\ntype UserContextType = {\n  user: AuthUser | null;\n  setUser: React.Dispatch<React.SetStateAction<AuthUser | null>>;\n  data: ApiData | null;\n  setData: React.Dispatch<React.SetStateAction<ApiData | null>>;\n  navigateToHome: () => void;\n  navigateToFavorites: () => void;\n  navigateToChar: () => void;\n  nextPage: () => void;\n  prevPage: () => void;\n  goToPage: (num: number) => void;\n  favorites: FavoriteCharacter[];\n  setFavorites: React.Dispatch<React.SetStateAction<FavoriteCharacter[]>>;\n  currentPageUrl: any;\n  nextPageUrl: PagesInfo | null;\n  prevPageUrl: PagesInfo | null;\n  pages: any;\n  setCurrentPageUrl: React.Dispatch<React.SetStateAction<string>>;\n  setNextPageUrl: React.Dispatch<React.SetStateAction<PagesInfo | null>>;\n  setPrevPageUrl: React.Dispatch<React.SetStateAction<PagesInfo | null>>;\n  setPages: React.Dispatch<React.SetStateAction<PagesInfo | null>>;\n};\n\ntype UserContextProviderProps = {\n  children: React.ReactNode;\n};\n\nexport const UserContext = createContext<UserContextType>(null as any);\nexport const UserContextProvider = ({ children }: UserContextProviderProps) => {\n  const [user, setUser] = useState<AuthUser | null>(null);\n  const [data, setData] = useState<ApiData | null>(null);\n  \n  const [favorites, setFavorites] = useState<FavoriteCharacter[]>(() => {\n    const storedFavorites = localStorage.getItem(\"favorites\");\n    return storedFavorites ? JSON.parse(storedFavorites) : [];\n  });\n  const [currentPageUrl, setCurrentPageUrl] = useState(() => {\n    const storedPage = localStorage.getItem(\"currentPage\");\n    return storedPage\n      ? `https://rickandmortyapi.com/api/character?page=${storedPage}`\n      : \"https://rickandmortyapi.com/api/character\";\n  });\n  const [nextPageUrl, setNextPageUrl] = useState<PagesInfo | null>(null);\n  const [prevPageUrl, setPrevPageUrl] = useState<PagesInfo | null>(null);\n  const [pages, setPages] = useState<PagesInfo | null>(null);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    const storedPassword = localStorage.getItem(\"password\");\n\n    if (storedUsername && storedPassword) {\n      setUser({ name: storedUsername, password: storedPassword });\n    }\n  }, []);\n  const navigate = useNavigate();\n \n  const navigateToHome = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"password\");\n\n    setUser(null);\n    navigate(\"/\");\n  };\n  const navigateToFavorites = () => {\n    navigate(\"/favorites\");\n  };\n  const navigateToChar = () => {\n    navigate(\"/home\");\n  };\n\n  const nextPage = () => {\n    if (nextPageUrl && nextPageUrl !== undefined) {\n      setCurrentPageUrl(nextPageUrl.toString());\n    }\n  };\n\n  const prevPage = () => {\n    if (prevPageUrl && prevPageUrl !== undefined) {\n      setCurrentPageUrl(prevPageUrl.toString());\n    }\n  };\n\n  const goToPage = (num: number) => {\n    setCurrentPageUrl(`https://rickandmortyapi.com/api/character?page=${num}`);\n  };\n\n  return (\n    <UserContext.Provider\n      value={{\n        user,\n        setUser,\n        data,\n        setData,\n        navigateToHome,\n        navigateToFavorites,\n        navigateToChar,\n        favorites,\n        setFavorites,\n        setNextPageUrl,\n        setPrevPageUrl,\n        setPages,\n        setCurrentPageUrl,\n        nextPageUrl,\n        prevPageUrl,\n        pages,\n        currentPageUrl,\n        nextPage,\n        prevPage,\n        goToPage,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\n// interface ICharacter<T> {\n//   name: string;\n//   sexInfo: T;\n// }\n\n// interface MaleReproductiveInfo {\n//   dSize: string;\n\n// }\n\n// const aleksa : ICharacter<MaleReproductiveInfo>\n\n// aleksa.sexInfo.\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}