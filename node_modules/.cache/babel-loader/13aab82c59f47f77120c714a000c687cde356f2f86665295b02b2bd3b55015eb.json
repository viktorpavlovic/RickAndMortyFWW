{"ast":null,"code":"var _jsxFileName = \"/home/marko/Desktop/RickAndMortyFWW/src/Components/EditModal/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./edit-modal.scss\";\nimport { Button, Form, Input } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditModal = ({\n  handleClose,\n  clickedChar,\n  updateClickedChar\n}) => {\n  _s();\n  const [editedCharacter, setEditedCharacter] = useState(clickedChar);\n  const handleOverlayClick = event => {\n    if (event.target === event.currentTarget) {\n      handleClose();\n    }\n  };\n  const handleInputChange = (field, value) => {\n    setEditedCharacter(prevCharacter => ({\n      ...prevCharacter,\n      [field]: value\n    }));\n  };\n  const handleFormSubmit = () => {\n    if (editedCharacter) {\n      updateClickedChar(editedCharacter);\n      handleClose();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-modal\",\n    onClick: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      style: {\n        maxWidth: 600\n      },\n      initialValues: {\n        ...clickedChar\n      },\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-modal\",\n        onClick: handleClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: \"Edit character name\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: editedCharacter === null || editedCharacter === void 0 ? void 0 : editedCharacter.name,\n          onChange: e => handleInputChange(\"name\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Species\",\n        name: \"species\",\n        rules: [{\n          required: true,\n          message: \"Edit character species\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: editedCharacter === null || editedCharacter === void 0 ? void 0 : editedCharacter.species,\n          onChange: e => handleInputChange(\"species\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: handleFormSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(EditModal, \"R8vNKA39dornxAb2Yv0qgidGkrM=\");\n_c = EditModal;\nexport default EditModal;\nvar _c;\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"names":["React","useState","Button","Form","Input","jsxDEV","_jsxDEV","EditModal","handleClose","clickedChar","updateClickedChar","_s","editedCharacter","setEditedCharacter","handleOverlayClick","event","target","currentTarget","handleInputChange","field","value","prevCharacter","handleFormSubmit","className","onClick","children","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","Item","label","rules","required","message","onChange","e","species","offset","type","_c","$RefreshReg$"],"sources":["/home/marko/Desktop/RickAndMortyFWW/src/Components/EditModal/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./edit-modal.scss\";\nimport { Button, Form, Input } from \"antd\";\n\ntype FieldType = {\n  name?: string;\n  species?: string;\n};\ninterface EditModalProps {\n  handleClose: () => void;\n  clickedChar: FieldType | null;\n  updateClickedChar: (updatedChar: FieldType) => void;\n}\n\nconst EditModal: React.FC<EditModalProps> = ({\n  handleClose,\n  clickedChar,\n  updateClickedChar,\n}) => {\n  const [editedCharacter, setEditedCharacter] = useState<FieldType | null>(\n    clickedChar\n  );\n\n  const handleOverlayClick = (event: { target: any; currentTarget: any }) => {\n    if (event.target === event.currentTarget) {\n      handleClose();\n    }\n  };\n\n  const handleInputChange = (field: keyof FieldType, value: string) => {\n    setEditedCharacter((prevCharacter) => ({\n      ...prevCharacter,\n      [field]: value,\n    }));\n  };\n\n  const handleFormSubmit = () => {\n    if (editedCharacter) {\n      updateClickedChar(editedCharacter);\n      handleClose();\n    }\n  };\n\n  return (\n    <div className=\"edit-modal\" onClick={handleOverlayClick}>\n      <Form\n        name=\"basic\"\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        style={{ maxWidth: 600 }}\n        initialValues={{ ...clickedChar }}\n        autoComplete=\"off\"\n      >\n        <span className=\"close-modal\" onClick={handleClose}>\n          X\n        </span>\n        <Form.Item<FieldType>\n          label=\"Name\"\n          name=\"name\"\n          rules={[{ required: true, message: \"Edit character name\" }]}\n        >\n          <Input\n            value={editedCharacter?.name}\n            onChange={(e) => handleInputChange(\"name\", e.target.value)}\n          />\n        </Form.Item>\n\n        <Form.Item<FieldType>\n          label=\"Species\"\n          name=\"species\"\n          rules={[{ required: true, message: \"Edit character species\" }]}\n        >\n          <Input\n            value={editedCharacter?.species}\n            onChange={(e) => handleInputChange(\"species\", e.target.value)}\n          />\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button type=\"primary\" onClick={handleFormSubmit}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default EditModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAC1B,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY3C,MAAMC,SAAmC,GAAGA,CAAC;EAC3CC,WAAW;EACXC,WAAW;EACXC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CACpDQ,WACF,CAAC;EAED,MAAMK,kBAAkB,GAAIC,KAA0C,IAAK;IACzE,IAAIA,KAAK,CAACC,MAAM,KAAKD,KAAK,CAACE,aAAa,EAAE;MACxCT,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMU,iBAAiB,GAAGA,CAACC,KAAsB,EAAEC,KAAa,KAAK;IACnEP,kBAAkB,CAAEQ,aAAa,KAAM;MACrC,GAAGA,aAAa;MAChB,CAACF,KAAK,GAAGC;IACX,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIV,eAAe,EAAE;MACnBF,iBAAiB,CAACE,eAAe,CAAC;MAClCJ,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,oBACEF,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAACC,OAAO,EAAEV,kBAAmB;IAAAW,QAAA,eACtDnB,OAAA,CAACH,IAAI;MACHuB,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAE;QAAEC,IAAI,EAAE;MAAE,CAAE;MACtBC,UAAU,EAAE;QAAED,IAAI,EAAE;MAAG,CAAE;MACzBE,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MACzBC,aAAa,EAAE;QAAE,GAAGvB;MAAY,CAAE;MAClCwB,YAAY,EAAC,KAAK;MAAAR,QAAA,gBAElBnB,OAAA;QAAMiB,SAAS,EAAC,aAAa;QAACC,OAAO,EAAEhB,WAAY;QAAAiB,QAAA,EAAC;MAEpD;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACP/B,OAAA,CAACH,IAAI,CAACmC,IAAI;QACRC,KAAK,EAAC,MAAM;QACZb,IAAI,EAAC,MAAM;QACXc,KAAK,EAAE,CAAC;UAAEC,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAsB,CAAC,CAAE;QAAAjB,QAAA,eAE5DnB,OAAA,CAACF,KAAK;UACJgB,KAAK,EAAER,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEc,IAAK;UAC7BiB,QAAQ,EAAGC,CAAC,IAAK1B,iBAAiB,CAAC,MAAM,EAAE0B,CAAC,CAAC5B,MAAM,CAACI,KAAK;QAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eAEZ/B,OAAA,CAACH,IAAI,CAACmC,IAAI;QACRC,KAAK,EAAC,SAAS;QACfb,IAAI,EAAC,SAAS;QACdc,KAAK,EAAE,CAAC;UAAEC,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAyB,CAAC,CAAE;QAAAjB,QAAA,eAE/DnB,OAAA,CAACF,KAAK;UACJgB,KAAK,EAAER,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEiC,OAAQ;UAChCF,QAAQ,EAAGC,CAAC,IAAK1B,iBAAiB,CAAC,SAAS,EAAE0B,CAAC,CAAC5B,MAAM,CAACI,KAAK;QAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eAEZ/B,OAAA,CAACH,IAAI,CAACmC,IAAI;QAACT,UAAU,EAAE;UAAEiB,MAAM,EAAE,CAAC;UAAElB,IAAI,EAAE;QAAG,CAAE;QAAAH,QAAA,eAC7CnB,OAAA,CAACJ,MAAM;UAAC6C,IAAI,EAAC,SAAS;UAACvB,OAAO,EAAEF,gBAAiB;UAAAG,QAAA,EAAC;QAElD;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAxEIJ,SAAmC;AAAAyC,EAAA,GAAnCzC,SAAmC;AA0EzC,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}