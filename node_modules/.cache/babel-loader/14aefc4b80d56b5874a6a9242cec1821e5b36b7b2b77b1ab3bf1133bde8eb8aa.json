{"ast":null,"code":"var _jsxFileName = \"/home/marko/Desktop/RickAndMortyFWW/src/Components/Pagination/index.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { UserContext } from \"../../Context/UserContext\";\nimport { useContext } from \"react\";\nimport { Pagination } from \"antd\";\nimport \"./rick-pagination.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RickPagination = () => {\n  _s();\n  const userContext = useContext(UserContext);\n  const goToPage = userContext === null || userContext === void 0 ? void 0 : userContext.goToPage;\n  const currentPage = Number(userContext === null || userContext === void 0 ? void 0 : userContext.currentPageUrl) || 1; // Convert to number\n  const totalPages = (userContext === null || userContext === void 0 ? void 0 : userContext.pages) || 0;\n  const handlePaginationChange = page => {\n    if (page !== currentPage) {\n      goToPage(page);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rick-pagination-div\",\n    children: /*#__PURE__*/_jsxDEV(Pagination, {\n      current: currentPage,\n      total: totalPages * 20 // Assuming pageSize is 20\n      ,\n      pageSize: 20,\n      onChange: handlePaginationChange,\n      showSizeChanger: false // You can configure this as needed\n      ,\n      showQuickJumper: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(RickPagination, \"j5sV9rHnklY0KPGfLa+JuIW0EIQ=\");\n_c = RickPagination;\nexport default RickPagination;\n\n// const RickPagination: React.FC = () => {\n//   const userContext = useContext(UserContext);\n//   const nextPage = userContext?.nextPage;\n//   const prevPage = userContext?.prevPage;\n//   const goToPage = userContext?.goToPage;\n//   const pages = userContext?.pages || 0;\n//   let pageButtons = [];\n//   for (let i = 1; i <= pages; i++) {\n//     pageButtons.push(\n//       <button key={i} onClick={() => goToPage(i)}>\n//         {i}\n//       </button>\n//     );\n//   }\n\n//   return (\n//     <div>\n//       {prevPage && <button onClick={prevPage}>Previous</button>}\n//       {pageButtons}\n//       {nextPage && <button onClick={nextPage}>Next</button>}\n//     </div>\n//   );\n// };\nvar _c;\n$RefreshReg$(_c, \"RickPagination\");","map":{"version":3,"names":["React","UserContext","useContext","Pagination","jsxDEV","_jsxDEV","RickPagination","_s","userContext","goToPage","currentPage","Number","currentPageUrl","totalPages","pages","handlePaginationChange","page","className","children","current","total","pageSize","onChange","showSizeChanger","showQuickJumper","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marko/Desktop/RickAndMortyFWW/src/Components/Pagination/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { UserContext } from \"../../Context/UserContext\";\nimport { useContext } from \"react\";\nimport { Pagination } from \"antd\";\nimport \"./rick-pagination.scss\";\n\nconst RickPagination: React.FC = () => {\n  const userContext = useContext(UserContext);\n  const goToPage = userContext?.goToPage;\n  const currentPage = Number(userContext?.currentPageUrl) || 1; // Convert to number\n  const totalPages = userContext?.pages || 0;\n\n  const handlePaginationChange = (page: number) => {\n    if (page !== currentPage) {\n      goToPage(page);\n    }\n  };\n\n  return (\n    <div className=\"rick-pagination-div\">\n      <Pagination\n        current={currentPage}\n        total={totalPages * 20} // Assuming pageSize is 20\n        pageSize={20}\n        onChange={handlePaginationChange}\n        showSizeChanger={false} // You can configure this as needed\n        showQuickJumper\n      />\n    </div>\n  );\n};\n\nexport default RickPagination;\n\n// const RickPagination: React.FC = () => {\n//   const userContext = useContext(UserContext);\n//   const nextPage = userContext?.nextPage;\n//   const prevPage = userContext?.prevPage;\n//   const goToPage = userContext?.goToPage;\n//   const pages = userContext?.pages || 0;\n//   let pageButtons = [];\n//   for (let i = 1; i <= pages; i++) {\n//     pageButtons.push(\n//       <button key={i} onClick={() => goToPage(i)}>\n//         {i}\n//       </button>\n//     );\n//   }\n\n//   return (\n//     <div>\n//       {prevPage && <button onClick={prevPage}>Previous</button>}\n//       {pageButtons}\n//       {nextPage && <button onClick={nextPage}>Next</button>}\n//     </div>\n//   );\n// };\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,UAAU,QAAQ,MAAM;AACjC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAMC,WAAW,GAAGN,UAAU,CAACD,WAAW,CAAC;EAC3C,MAAMQ,QAAQ,GAAGD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEC,QAAQ;EACtC,MAAMC,WAAW,GAAGC,MAAM,CAACH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEI,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9D,MAAMC,UAAU,GAAG,CAAAL,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEM,KAAK,KAAI,CAAC;EAE1C,MAAMC,sBAAsB,GAAIC,IAAY,IAAK;IAC/C,IAAIA,IAAI,KAAKN,WAAW,EAAE;MACxBD,QAAQ,CAACO,IAAI,CAAC;IAChB;EACF,CAAC;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCb,OAAA,CAACF,UAAU;MACTgB,OAAO,EAAET,WAAY;MACrBU,KAAK,EAAEP,UAAU,GAAG,EAAG,CAAC;MAAA;MACxBQ,QAAQ,EAAE,EAAG;MACbC,QAAQ,EAAEP,sBAAuB;MACjCQ,eAAe,EAAE,KAAM,CAAC;MAAA;MACxBC,eAAe;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CAxBID,cAAwB;AAAAuB,EAAA,GAAxBvB,cAAwB;AA0B9B,eAAeA,cAAc;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}