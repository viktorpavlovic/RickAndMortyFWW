{"ast":null,"code":"var _jsxFileName = \"/home/marko/Desktop/RickAndMortyFWW/src/Context/UserContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(null);\nexport const UserContextProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [data, setData] = useState(null);\n  const [searchValue, setSearchValue] = useState(null);\n  const [searchType, setSearchType] = useState(null);\n  const [favorites, setFavorites] = useState(() => {\n    const storedFavorites = localStorage.getItem(\"favorites\");\n    return storedFavorites ? JSON.parse(storedFavorites) : [];\n  });\n  const [currentPageUrl, setCurrentPageUrl] = useState(\"https://rickandmortyapi.com/api/character\");\n  const [nextPageUrl, setNextPageUrl] = useState();\n  const [prevPageUrl, setPrevPageUrl] = useState();\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    const storedPassword = localStorage.getItem(\"password\");\n    if (storedUsername && storedPassword) {\n      setUser({\n        name: storedUsername,\n        password: storedPassword\n      });\n    }\n  }, []);\n  const navigate = useNavigate();\n  const handleSearch = (input, type) => {\n    setSearchValue({\n      data: input\n    });\n    setSearchType(type);\n  };\n  const navigateToHome = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"password\");\n    setUser(null);\n    navigate(\"/\");\n  };\n  const navigateToFavorites = () => {\n    navigate(\"/favorites\");\n  };\n  const navigateToChar = () => {\n    navigate(\"/home\");\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      data,\n      setData,\n      navigateToHome,\n      navigateToFavorites,\n      navigateToChar,\n      handleSearch,\n      searchValue,\n      searchType,\n      favorites,\n      setFavorites\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(UserContextProvider, \"ZVsygVfbU/3e7SaXUYpOttuj9Ow=\", false, function () {\n  return [useNavigate];\n});\n_c = UserContextProvider;\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","UserContext","UserContextProvider","children","_s","user","setUser","data","setData","searchValue","setSearchValue","searchType","setSearchType","favorites","setFavorites","storedFavorites","localStorage","getItem","JSON","parse","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","storedUsername","storedPassword","name","password","navigate","handleSearch","input","type","navigateToHome","removeItem","navigateToFavorites","navigateToChar","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marko/Desktop/RickAndMortyFWW/src/Context/UserContext.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useState,\n  useEffect,\n  SetStateAction,\n} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport type AuthUser = {\n  name: string;\n  password: string;\n};\nexport type ApiData = {\n  results: Character[];\n};\nexport type SearchValue = {\n  data: any;\n};\nexport interface Character {\n  id: number;\n  name: string;\n  image: string;\n  species: string;\n  status: string;\n  gender: string;\n}\ninterface FavoriteCharacter {\n  name: string;\n  image: string;\n  species: string;\n}\nexport interface paginatedMorty {\n  results: Character[];\n  hasMore: boolean;\n}\n\ntype UserContextType = {\n  user: AuthUser | null;\n  setUser: React.Dispatch<React.SetStateAction<AuthUser | null>>;\n  data: ApiData | null;\n  setData: React.Dispatch<React.SetStateAction<ApiData | null>>;\n  navigateToHome: () => void;\n  navigateToFavorites: () => void;\n  navigateToChar: () => void;\n  handleSearch: (input: any, type: string) => void;\n  searchValue: SearchValue | null;\n  searchType: string | null;\n  favorites: FavoriteCharacter[];\n  setFavorites: React.Dispatch<React.SetStateAction<FavoriteCharacter[]>>;\n};\n\ntype UserContextProviderProps = {\n  children: React.ReactNode;\n};\n\nexport const UserContext = createContext<UserContextType>(null as any);\nexport const UserContextProvider = ({ children }: UserContextProviderProps) => {\n  const [user, setUser] = useState<AuthUser | null>(null);\n  const [data, setData] = useState<ApiData | null>(null);\n  const [searchValue, setSearchValue] = useState<SearchValue | null>(null);\n  const [searchType, setSearchType] = useState<string | null>(null);\n  const [favorites, setFavorites] = useState<FavoriteCharacter[]>(() => {\n    const storedFavorites = localStorage.getItem(\"favorites\");\n    return storedFavorites ? JSON.parse(storedFavorites) : [];\n  });\n  const [currentPageUrl, setCurrentPageUrl] = useState(\n    \"https://rickandmortyapi.com/api/character\"\n  );\n  const [nextPageUrl, setNextPageUrl] = useState();\n  const [prevPageUrl, setPrevPageUrl] = useState();\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    const storedPassword = localStorage.getItem(\"password\");\n\n    if (storedUsername && storedPassword) {\n      setUser({ name: storedUsername, password: storedPassword });\n    }\n  }, []);\n  const navigate = useNavigate();\n  const handleSearch = (\n    input: SetStateAction<SearchValue | null>,\n    type: string\n  ) => {\n    setSearchValue({ data: input });\n    setSearchType(type);\n  };\n  const navigateToHome = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"password\");\n\n    setUser(null);\n    navigate(\"/\");\n  };\n  const navigateToFavorites = () => {\n    navigate(\"/favorites\");\n  };\n  const navigateToChar = () => {\n    navigate(\"/home\");\n  };\n\n  return (\n    <UserContext.Provider\n      value={{\n        user,\n        setUser,\n        data,\n        setData,\n        navigateToHome,\n        navigateToFavorites,\n        navigateToChar,\n        handleSearch,\n        searchValue,\n        searchType,\n        favorites,\n        setFavorites,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}